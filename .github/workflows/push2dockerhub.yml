name: Build and Push Docker Image to Docker Hub

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  REF: ${{ github.ref_name}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker-compose build --no-cache --force-rm 
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test the Docker image
        run: docker-compose up -d 
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Output metadata
        run: |
          echo "${{ steps.meta.outputs.tags }}"
          echo "${{ steps.meta.outputs.labels }}"
          echo "${{ env.REF }}"
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  update-docker-hb-description:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Docker Hub token
      id: get-docker-hb-token
      run: |
        curl -X POST \
          -H "Content-Type: application/json" \
          -d '{"username":"${{ secrets.DOCKER_USER }}","password":"${{ secrets.DOCKER_PASSWORD }}"}' \
          https://hub.docker.com/v2/users/login \
          -o token.json
        token=$(jq -r .token token.json)
        echo "token=$token" >> "$GITHUB_OUTPUT"
    - name: get token
      run: echo ${{ steps.get-docker-hb-token.outputs.token }}
    - name: Update Docker Hub repository description
      run: |
        curl -i -X PATCH \
          -H "Content-Type: application/json" \
          -H "Authorization: JWT ${{ steps.get-docker-hb-token.outputs.token }}" \
          -d "{\"description\":\"${{ github.event.repository.description }}\"}" \
          https://hub.docker.com/v2/repositories/${{ env.IMAGE_NAME }}/ || {
            echo "API call failed with status code $?"
            echo "Response body:"
            echo ${{ steps.get-docker-hb-token.outputs.token }}
            cat
            exit 1  # Explicitly fail the job
